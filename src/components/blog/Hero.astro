---
import type { CollectionEntry } from "astro:content";

import { Image } from "astro:assets";

import FormattedDate from "../FormattedDate.astro";

interface Props {
  content: CollectionEntry<"post"> | CollectionEntry<"project"> |CollectionEntry<"project"> | CollectionEntry<"project">;

}

const {
  content: { data, render },
} = Astro.props;

const { remarkPluginFrontmatter } = await render();

const dateTimeOptions: Intl.DateTimeFormatOptions = {
  month: "long",
};
---

{
  data.coverImage && (
    <div class="aspect-h-9 aspect-w-16 mb-6">
      <Image
        alt={data.coverImage.alt}
        class="object-cover"
        fetchpriority="high"
        loading="eager"
        src={data.coverImage.src}
      />
    </div>
  )
}
{data.draft ? <span class="text-base text-red-500">(Draft)</span> : null}
<h1 class="title">
  {data.title}
</h1>
<div class="mt-3 flex flex-wrap items-center gap-x-3 gap-y-2">
  <p class="font-semibold">
    <FormattedDate date={data.publishDate} dateTimeOptions={dateTimeOptions} /> /{" "}
    {remarkPluginFrontmatter.minutesRead}
  </p>
  {
    data.updatedDate && (
      <span class="rounded-lg bg-quote/10 p-1 text-quote">
        Last Updated:
        <FormattedDate class="ms-1" date={data.updatedDate} dateTimeOptions={dateTimeOptions} />
      </span>
    )
  }
</div>
