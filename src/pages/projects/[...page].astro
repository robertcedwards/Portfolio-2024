---
import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";

import Pagination from "@/components/Paginator.astro";
import ProjectPreview from "@/components/blog/ProjectPreview.astro";
import { getAllProjects, getUniqueProjectTags, groupProjectsByYear, sortProjectsByDate } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_PROJECTS_PER_PAGE = 10;
	const allProjects = await getAllProjects();

	const allProjectsByDate = sortProjectsByDate(allProjects);

	const uniqueTags = getUniqueProjectTags(allProjects);
	return paginate(allProjectsByDate, { pageSize: MAX_PROJECTS_PER_PAGE, props: { uniqueTags } });
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"project">>;
	uniqueTags: string[];
}

const { page, uniqueTags } = Astro.props;


const meta = {
	description: "This is projects",
	title: "Projects",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: `← Previous Page`,
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: `Next Page →`,
			url: page.url.next,
		},
	}),
};

const groupedByYear = groupProjectsByYear(page.data);

const descYearKeys = Object.keys(groupedByYear).sort((a, b) => +b - +a);
---

<PageLayout meta={meta}>
	<h1 class="title mb-6">Projects</h1>
	<div class="grid gap-y-16 sm:grid-cols-[3fr_1fr] sm:gap-x-8">
		<section aria-label="Project list">
			{
				descYearKeys.map((yearKey) => (
					<>
						<h2 class="title text-lg">{yearKey}</h2>
						<ul class="mb-8 mt-6 space-y-8 text-start">
							{groupedByYear[yearKey]?.map((p) => (
								<li class="grid gap-2 sm:grid-cols-[auto_1fr] sm:[&_q]:col-start-2">
									<ProjectPreview post={p} />
								</li>
							))}
						</ul>
					</>
				))
			}
			<Pagination {...paginationProps} />
		</section>
		
	</div>
</PageLayout>